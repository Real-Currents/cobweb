#VRML V2.0 utf8 Titania V1.2.2

EXTERNPROTO LineTrail [
  exposedField SFBool  enabled
  exposedField SFTime  cycleInterval
  exposedField SFTime  resetTime
  exposedField SFVec3f point
  field        SFInt32 dimension
]
"../../../../../Titania/Library/Tests/Interpolation/LineTrail.wrl"

WorldInfo {
  metadata DEF Titania MetadataSet {
    name "Titania"
    reference "http://titania.create3000.de"
    value [
      DEF NavigationInfo MetadataSet {
        name "NavigationInfo"
        reference "http://titania.create3000.de"
        value DEF type MetadataString {
          name "type"
          reference "http://titania.create3000.de"
          value "EXAMINE"
        }
      }
      DEF Viewpoint MetadataSet {
        name "Viewpoint"
        reference "http://titania.create3000.de"
        value [
          DEF position MetadataDouble {
            name "position"
            reference "http://titania.create3000.de"
            value [
              0.474346160888672,
              -3.89849138259888,
              -3.0950927734375
            ]
          }
          DEF orientation MetadataDouble {
            name "orientation"
            reference "http://titania.create3000.de"
            value [
              0.0132001033052802,
              -0.900589644908905,
              0.434469789266586,
              3.23435473442078
            ]
          }
          DEF centerOfRotation MetadataDouble {
            name "centerOfRotation"
            reference "http://titania.create3000.de"
            value [
              0,
              0,
              0
            ]
          }
        ]
      }
    ]
  }
  title "OrientationChaser"
}

NavigationInfo {
  type [
    "NONE",
    "ANY"
  ]
}

Background {
  skyColor 0.2 0.2 0.2
}

Viewpoint {
  position 0 0 5
}

DEF LineTrail Shape {
  appearance Appearance {
    material Material {
      emissiveColor 0 0.8 0.8
    }
  }
  geometry DEF Trail LineTrail {
    enabled FALSE
    cycleInterval 0.1
    point 0.119443 -0.992167 -0.0365664
    dimension 100
  }
}

DEF Sphere Transform {
  children [
    Shape {
      appearance Appearance {
        material Material {
          transparency 0.5
        }
      }
      geometry Sphere { }
    }
    DEF Touch TouchSensor { }
  ]
}

DEF Cone Transform {
  rotation 0.992831 0.119523 0 1.60737
  children [
    DEF Cone_1 Transform {
      translation 0 0 0.192283
      rotation 1 0 0 1.5708
      scale 0.770473 0.770473 0.770473
      children Shape {
        appearance Appearance {
          material DEF ConeMaterial Material { }
        }
        geometry Cone { }
      }
    }
    DEF IndexedLineSet Transform {
      children Shape {
        geometry IndexedLineSet {
          colorPerVertex FALSE
          colorIndex [
            0,
            1,
            2
          ]
          coordIndex [
            0,
            1,
            -1,
            2,
            3,
            -1,
            4,
            5,
            -1
          ]
          color Color {
            color [
              1 0 0,
              0 1 0,
              0 0 1
            ]
          }
          coord Coordinate {
            point [
              -1 0 0,
              1 0 0,
              0 -1 0,
              0 1 0,
              0 0 -1,
              0 0 1
            ]
          }
        }
      }
    }
  ]
}

DEF FollowerScript Script {
  eventIn  SFTime     set_time
  eventIn  SFBool     set_active
  eventIn  SFRotation set_rotation
  eventOut SFColor    color_changed
  eventOut SFVec3f    point_changed
  field    SFNode     touchSensor USE Touch
  field    SFNode     timeSensor DEF _1 TimeSensor {
    cycleInterval 2
    startTime 1451888885.30225
    stopTime 1451888885.30225
  }
  field    SFNode     interpolator DEF _2 OrientationInterpolator {
    key [
      0,
      1
    ]
    keyValue [
      0.848775 -0.528754 0 1.77575,
      0.992831 0.119523 -0 1.60737
    ]
  }

  url "vrmlscript:

function initialize ()
{
	timeSensor .stopTime  = 0;
	timeSensor .startTime = 0;

	interpolator .keyValue [0] = new SFRotation ();
	interpolator .keyValue [1] = new SFRotation ();
}

function set_time (value, time)
{
	timeSensor .stopTime  = time;
	timeSensor .startTime = time;

	interpolator .keyValue [0] = interpolator .value_changed;
	interpolator .keyValue [1] = new SFRotation (new SFVec3f (0, 0, 1), touchSensor .hitPoint_changed);
}

function set_active (value)
{
	if (value)
		color_changed = new SFColor (0.8, 0, 0);
	
	else
		color_changed = new SFColor (0.8, 0.8, 0.8);
}

function set_rotation (value)
{
	point_changed = value .multVec (new SFVec3f (0, 0, 1));
}
"
}

ROUTE Touch.touchTime TO FollowerScript.set_time
ROUTE FollowerScript.color_changed TO ConeMaterial.set_diffuseColor
ROUTE FollowerScript.point_changed TO Trail.set_point
ROUTE _2.value_changed TO FollowerScript.set_rotation
ROUTE _2.value_changed TO Cone.set_rotation
ROUTE _1.isActive TO Trail.set_enabled
ROUTE _1.isActive TO FollowerScript.set_active
ROUTE _1.fraction_changed TO _2.set_fraction
